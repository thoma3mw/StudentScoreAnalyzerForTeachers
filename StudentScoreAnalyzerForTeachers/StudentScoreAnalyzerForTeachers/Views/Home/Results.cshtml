@using StudentScoreAnalyzerForTeachers.Models
@using Syncfusion.JavaScript.Models
@model NumberModel
@{
    this.ViewBag.Title = "Results";
}

<h2>Below are the scores listed in @(this.ViewBag.SortDirection) order.</h2>

<div style="float: right">
    @(this.Html.EJ()
          .Button("groupButton")
          .Text("Create Groups")
          .Size(ButtonSize.Normal)
          .Type(ButtonType.Submit)
          .ClientSideEvents(e => e.Click("openDialog")))
</div>
<br/><br/>

@(this.Html.EJ()
      .Grid<StudentScoreModel>("ScoreList")
      .Datasource((List<StudentScoreModel>)this.Session["StudentScoreModels"])
      .ToolbarSettings(toolbar => toolbar.ShowToolbar()
                                      .ToolbarItems(items =>
                                          {
                                              items.AddTool(ToolBarItems.PrintGrid);
                                          }))
      .Columns(col =>
          {
              col.Field("StudentNumber")
                  .HeaderText("Student Number")
                  .IsPrimaryKey(true)
                  .TextAlign(TextAlign.Left)
                  .Add();
              col.Field("StudentScore")
                  .HeaderText("Score")
                  .EditType(EditingType.Numeric)
                  .NumericEditOptions(new EditorProperties
                                          {
                                              DecimalPlaces = 2
                                          })
                  .TextAlign(TextAlign.Left)
                  .Add();
          }))

@{
    this.Html.EJ()
        .Dialog("groupDialog")
        .Title("Group Creation")
        .ContentTemplate(@<div>
                             @{ this.Html.BeginForm(); }
                             <p>How many groups would you like to create?</p>
                             @( this.Html.EJ()
                                    .NumericTextBoxFor(m => m.Number)
                                    .Value("1")
                                    .Width("70px")
                                    .MinValue(1))
                             <div style="float: right; margin: 5px">
                                 @( this.Html.EJ()
                                        .Button("okButton")
                                        .Size(ButtonSize.Mini)
                                        .Height("30")
                                        .Width("70")
                                        .Text("OK")
                                        .Type(ButtonType.Submit))
                                 @( this.Html.EJ()
                                        .Button("cancelButton")
                                        .Size(ButtonSize.Mini)
                                        .Height("30")
                                        .Width("70")
                                        .Text("Cancel")
                                        .ClientSideEvents(e => e.Click("closeDialog")))
                             </div>
                             @{
                                 this.Html.EndForm();
                             }
                         </div>)
        .ShowOnInit(false)
        .EnableResize(false)
        .EnableModal(true)
        .Render();
}

<script>
    function openDialog() {
        $("#groupDialog").ejDialog("open");
    }

    function closeDialog() {
        $("#groupDialog").ejDialog("close");
    }
</script>